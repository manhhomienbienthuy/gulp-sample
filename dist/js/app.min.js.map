{"version":3,"sources":["app.min.js","library.js","script1.js","script2.js"],"names":["_classCallCheck","instance","Constructor","TypeError","myLibraryFunction","p1","p2","arr","forEach","v","Car","engine","this"],"mappings":"AAAA,YAEA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCCFhH,GAAAC,mBAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAC,ICDA,WACA,GAAAD,GAAA,kBACAC,EAAA,mBACAF,mBAAAC,EAAAC,EAEA,IAAAC,IAAA,EAAA,EAAA,EACAA,GAAAC,QAAA,SAAAC,GFSQ,METRA,GAAA,MFaA,IGnBAC,KACA,QADAA,GACAC,GHmBIX,gBAAgBY,KGpBpBF,GAEAE,KAAAD,OAAAA","file":"app.min.js","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar myLibraryFunction = function myLibraryFunction(p1, p2) {\n    return p1 + p2;\n};\n\n(function () {\n    var p1 = 'This is awesome';\n    var p2 = 'JavaScript script';\n    myLibraryFunction(p1, p2);\n\n    var arr = [1, 2, 3];\n    arr.forEach(function (v) {\n        return v + 1;\n    });\n})();\n\nvar Car = function Car(engine) {\n    _classCallCheck(this, Car);\n\n    this.engine = engine;\n};","var myLibraryFunction = function(p1, p2) {\n    return p1 + p2;\n};\n","(() => {\n    var p1 = 'This is awesome';\n    var p2 = 'JavaScript script';\n    myLibraryFunction(p1, p2);\n\n    var arr = [1, 2, 3];\n    arr.forEach(v => v + 1);\n})();\n","class Car {\n    constructor(engine) {\n        this.engine = engine;\n    }\n}\n"],"sourceRoot":"/source/"}